<h1>Activity_main.xml:-</h1> 
<?xml version="1.0" encoding="utf-8"?> 
<LinearLayout 
 xmlns:android="http://schemas.android.com/apk/res/android" 
 android:layout_width="match_parent" 
 android:layout_height="match_parent" 
 android:orientation="vertical"> 
 <!-- Adding the time picker to select the alarm time--> 
 <TimePicker 
 android:id="@+id/timePicker" 
 android:layout_marginTop="33dp" 
 android:layout_width="wrap_content" 
 android:layout_height="wrap_content" 
 android:layout_gravity="center" /> 
 <!--Adding the toggle button for switch between on and off of alarm --> 
 <ToggleButton 
 android:id="@+id/toggleButton" 
 android:layout_width="118dp" 
 android:layout_height="61dp" 
 android:layout_gravity="center" 
 android:layout_margin="20dp" 
 android:checked="false" 
 android:onClick="OnToggleClicked" /> 
</LinearLayout>
<h1>MainActivity.java:-</h1> 
package com.example.alarmclock; 
import android.app.AlarmManager; 
import android.app.PendingIntent; 
import android.content.Intent; 
import android.os.Bundle; 
import android.view.View; 
import android.widget.TimePicker; 
import android.widget.Toast; 
import android.widget.ToggleButton; 
import androidx.appcompat.app.AppCompatActivity; 
import com.example.alarmclock.R; 
import java.util.Calendar; 
public class MainActivity extends AppCompatActivity { 
 //Declaring the variable for the alarm clock 
 TimePicker alarmTimePicker; 
 PendingIntent pendingIntent; 
 AlarmManager alarmManager; 
 @Override 
 protected void onCreate(Bundle savedInstanceState) { 
 super.onCreate(savedInstanceState); 
 setContentView(R.layout.activity_main); 
 alarmTimePicker = (TimePicker) findViewById(R.id.timePicker); 
 alarmManager = (AlarmManager) getSystemService(ALARM_SERVICE); 
 } 
 // Making the OnToggleClicked method for the initialisation of time 
functionality 
 public void OnToggleClicked(View view) { 
 long time; 
 if (((ToggleButton) view).isChecked()) { 
 Toast.makeText(MainActivity.this, "ALARM ON", 
Toast.LENGTH_SHORT).show(); 
 Calendar calendar = Calendar.getInstance(); 
 // Calling the calander api for showing the time 
 calendar.set(Calendar.HOUR_OF_DAY, 
alarmTimePicker.getCurrentHour()); 
 calendar.set(Calendar.MINUTE, 
alarmTimePicker.getCurrentMinute()); 
 //Making the intent for class AlarmReceiver class for 
inheriting the BroadcastReceiver 
 Intent intent = new Intent(this, AlarmReceiver.class); 
 //Calling the broadcast by help of pendindIntent class 
 pendingIntent = PendingIntent.getBroadcast(this, 0, intent, 0); 
 time = (calendar.getTimeInMillis() - 
(calendar.getTimeInMillis() % 60000)); 
 if (System.currentTimeMillis() > time) { 
 // Setting the Time format AM and PM 
 if (calendar.AM_PM == 0) 
 time = time + (1000 * 60 * 60 * 12); 
 else 
 time = time + (1000 * 60 * 60 * 24); 
 } 
 // Using the setRepeating for continuosly ringing the alarm 
untill toggle button is off 
 alarmManager.setRepeating(AlarmManager.RTC_WAKEUP, time, 10000, 
pendingIntent); 
 // alarmManager.set(AlarmManager.RTC_WAKEUP, 
System.currentTimeMillis() + (time * 1000), pendingIntent); 
 } else { 
 alarmManager.cancel(pendingIntent); 
 Toast.makeText(MainActivity.this, "ALARM OFF", 
Toast.LENGTH_SHORT).show(); 
 } 
 } 
} 
<h1>AlarmReciever.java:-</h1> 
package com.example.alarmclock; 
import android.content.BroadcastReceiver; 
import android.content.Context; 
import android.content.Intent; 
import android.media.Ringtone; 
import android.media.RingtoneManager; 
import android.net.Uri; 
import android.os.Build; 
import android.os.Vibrator; 
import android.widget.Toast; 
import androidx.annotation.RequiresApi; 
public class AlarmReceiver extends BroadcastReceiver { 
 @RequiresApi(api = Build.VERSION_CODES.Q) 
 @Override 
 // implement onReceive() method 
 public void onReceive(Context context, Intent intent) { 
 // we will use vibrator first 
 Vibrator vibrator = (Vibrator) 
context.getSystemService(context.VIBRATOR_SERVICE); 
 vibrator.vibrate(4000); 
 Toast.makeText(context, "Alarm! Wake up! Wake up!", 
Toast.LENGTH_LONG).show(); 
 Uri alarmUri = 
RingtoneManager.getDefaultUri(RingtoneManager.TYPE_ALARM); 
 if (alarmUri == null) { 
 alarmUri = 
RingtoneManager.getDefaultUri(RingtoneManager.TYPE_NOTIFICATION); 
 } 
 // setting default ringtone 
 Ringtone ringtone = RingtoneManager.getRingtone(context, alarmUri); 
 // play ringtone 
 ringtone.play(); 
 } 
}
